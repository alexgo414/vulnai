

[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m


+==============================================================================+

                               /$$$$$$            /$$
                              /$$__  $$          | $$
           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$
          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$
         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$
          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$
          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$
         |_______/  \_______/|__/     \_______/   \___/   \____  $$
                                                          /$$  | $$
                                                         |  $$$$$$/
  by safetycli.com                                        \______/

+==============================================================================+

 [1mREPORT[0m 

  Safety [1mv3.5.1[0m is scanning for [1mVulnerabilities[0m[1m...[0m
[1m  Scanning dependencies[0m in your [1mfiles:[0m

  -> requirements.txt

  Using [1mthe account amana@uma.es[0m and the [1mSafety Commercial
  database[0m
[1m  Found and scanned 7 packages[0m
  Timestamp [1m2025-05-16 01:43:49[0m
[1m  113[0m[1m vulnerabilities reported[0m
[1m  0[0m[1m vulnerabilities ignored[0m
[1m  6[0m[1m remediations recommended[0m

+==============================================================================+
 [1mVULNERABILITIES REPORTED[0m 
+==============================================================================+

[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m64437
[1m   Affected spec: [0m<10.2.0
[1m   ADVISORY: [0mPillow is potentially vulnerable to DoS attacks through
   PIL.ImageFont.ImageFont.getmask(). A decompression bomb check has also
   been added to the affected function.
[1m   Fixed versions: [0m10.2.0
[1m   PVE-2024-64437[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/64437/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 64437 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m64436
[1m   Affected spec: [0m<10.2.0
[1m   ADVISORY: [0mPillow is affected by an arbitrary code execution
   vulnerability. If an attacker has control over the keys passed to the
   environment argument of PIL.ImageMath.eval(), they may be able to execute
   arbitrary
   code.https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html
[1m   Fixed versions: [0m10.2.0
[1m   CVE-2023-50447 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 8.1, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/64436/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 64436 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44744
[1m   Affected spec: [0m<6.2.0
[1m   ADVISORY: [0mPillow 6.2.0 includes a fix for CVE-2019-16865: An issue
   was discovered in Pillow before 6.2.0. When reading specially crafted
   invalid image files, the library can either allocate very large amounts of
   memory or take an extremely long period of time to process the image.
[1m   Fixed versions: [0m6.2.0
[1m   CVE-2019-16865 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44744/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44744 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m38452
[1m   Affected spec: [0m<=7.0.0
[1m   ADVISORY: [0mIn libImaging/SgiRleDecode.c in Pillow through 7.0.0, a
   number of out-of-bounds reads exist in the parsing of SGI image files, a
   different issue than CVE-2020-5311.
[1m   Fixed versions: [0m7.1.0
[1m   CVE-2020-11538 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 8.1, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 6.8, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38452/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38452 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40273
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-25293: There is
   an out-of-bounds read in SGIRleDecode.c.https://pillow.readthedocs.io/en/s
   table/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-25293 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40273/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40273 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40266
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-25292: The PDF
   parser allows a regular expression DoS (ReDoS) attack via a crafted PDF
   file because of a catastrophic backtracking
   regex.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-25292 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40266/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40266 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40275
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-25290: In
   TiffDecode.c, there is a negative-offset memcpy with an invalid
   size.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-25290 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40275/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40275 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40272
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-25291: In
   TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via
   invalid tile
   boundaries.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-25291 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40272/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40272 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40267
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-27922: Pillow
   before 8.1.1 allows attackers to cause a denial of service (memory
   consumption) because the reported size of a contained image is not
   properly checked for an ICNS container, and thus an attempted memory
   allocation can be very
   large.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-27922 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40267/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40267 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40263
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-27921: Pillow
   before 8.1.1 allows attackers to cause a denial of service (memory
   consumption) because the reported size of a contained image is not
   properly checked for a BLP container, and thus an attempted memory
   allocation can be very
   large.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-27921 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40263/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40263 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40274
[1m   Affected spec: [0m<8.1.1
[1m   ADVISORY: [0mPillow 8.1.1 includes a fix for CVE-2021-25289:
   TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr
   files because of certain interpretation conflicts with LibTIFF in RGBA
   mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35
   654.https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-25289 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40274/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40274 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40268
[1m   Affected spec: [0m>=4.3.0,<8.1.1
[1m   ADVISORY: [0mPillow before 8.1.1 allows attackers to cause a denial
   of service (memory consumption) because the reported size of a contained
   image is not properly checked for an ICO container, and thus an attempted
   memory allocation can be very large.
[1m   Fixed versions: [0m8.1.1
[1m   CVE-2021-27923 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40268/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40268 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m61489
[1m   Affected spec: [0m>=2.5.0,<10.0.1
[1m   ADVISORY: [0mPillow 10.0.1 updates its C dependency 'libwebp' to
   1.3.2 to include a fix for a high-risk vulnerability.https://pillow.readth
   edocs.io/en/stable/releasenotes/10.0.1.html
[1m   Fixed versions: [0m10.0.1
[1m   CVE-2023-4863 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE SCORE
   8.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/61489/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 61489 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40264
[1m   Affected spec: [0m<8.0.1
[1m   ADVISORY: [0mPillow 8.0.1 updates 'FreeType' used in binary wheels to
   v2.10.4 to include a security fix.
[1m   Fixed versions: [0m8.0.1
[1m   CVE-2020-15999 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.6, IMPACT SCORE 6.0, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40264/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40264 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m54688
[1m   Affected spec: [0m>=0,<8.2.0
[1m   ADVISORY: [0mAn issue was discovered in Pillow before 8.2.0.
   PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input
   layers relative to the size of the data block. This could lead to a DoS on
   Image.open prior to Image.load.
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-28675 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/54688/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 54688 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m62156
[1m   Affected spec: [0m<10.0.0
[1m   ADVISORY: [0mPillow 10.0.0 includes a fix for CVE-2023-44271: Denial
   of Service that uncontrollably allocates memory to process a given task,
   potentially causing a service to crash by having it run out of memory.
   This occurs for truetype in ImageFont when textlength in an ImageDraw
   instance operates on a long text argument.https://github.com/python-
   pillow/Pillow/pull/7244
[1m   Fixed versions: [0m10.0.0
[1m   CVE-2023-44271 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/62156/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 62156 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44524
[1m   Affected spec: [0m<9.0.0
[1m   ADVISORY: [0mPillow 9.0.0 ensures JpegImagePlugin stops at the end of
   a truncated file to avoid Denial of Service
   attacks.https://github.com/python-
   pillow/Pillow/pull/5921https://github.com/advisories/GHSA-4fx9-vc88-q2xc
[1m   Fixed versions: [0m9.0.0
[1m   PVE-2022-44524 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44524/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44524 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44525
[1m   Affected spec: [0m<9.0.0
[1m   ADVISORY: [0mPillow 9.0.0 excludes carriage return in PDF regex to
   help prevent ReDoS.https://github.com/python-
   pillow/Pillow/pull/5912https://github.com/python-
   pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363
[1m   Fixed versions: [0m9.0.0
[1m   PVE-2021-44525 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44525/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44525 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44485
[1m   Affected spec: [0m<9.0.0
[1m   ADVISORY: [0mPillow 9.0.0 includes a fix for CVE-2022-22815:
   path_getbbox in path.c in Pillow before 9.0.0 improperly initializes Image
   Path.Path.https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#
   fixed-imagepath-path-array-handling
[1m   Fixed versions: [0m9.0.0
[1m   CVE-2022-22815 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.5, IMPACT SCORE 2.5, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44485/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44485 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44486
[1m   Affected spec: [0m<9.0.0
[1m   ADVISORY: [0mPillow 9.0.0 includes a fix for CVE-2022-22816:
   path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read
   during initialization of ImagePath.Path.https://pillow.readthedocs.io/en/s
   table/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling
[1m   Fixed versions: [0m9.0.0
[1m   CVE-2022-22816 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.5, IMPACT SCORE 2.5, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44486/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44486 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m38451
[1m   Affected spec: [0m<7.1.0
[1m   ADVISORY: [0mIn libImaging/Jpeg2KDecode.c in Pillow before 7.1.0,
   there are multiple out-of-bounds reads via a crafted JP2 file.
[1m   Fixed versions: [0m7.1.0
[1m   CVE-2020-10994 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38451/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38451 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m38450
[1m   Affected spec: [0m<7.1.0
[1m   ADVISORY: [0mIn Pillow before 7.1.0, there are two Buffer Overflows
   in libImaging/TiffDecode.c.
[1m   Fixed versions: [0m7.1.0
[1m   CVE-2020-10379 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 6.8, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38450/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38450 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m38449
[1m   Affected spec: [0m<7.1.0
[1m   ADVISORY: [0mIn libImaging/PcxDecode.c in Pillow before 7.1.0, an
   out-of-bounds read can occur when reading PCX files where state->shuffle
   is instructed to read beyond state->buffer.
[1m   Fixed versions: [0m7.1.0
[1m   CVE-2020-10378 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38449/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38449 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m38448
[1m   Affected spec: [0m<7.1.0
[1m   ADVISORY: [0mPillow before 7.1.0 has multiple out-of-bounds reads in
   libImaging/FliDecode.c.
[1m   Fixed versions: [0m7.1.0
[1m   CVE-2020-10177 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38448/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38448 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40965
[1m   Affected spec: [0m<8.3.0
[1m   ADVISORY: [0mPillow 8.3.0 includes a fix for CVE-2021-34552: Pillow
   through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7
   allow an attacker to pass controlled parameters directly into a convert
   function to trigger a buffer overflow in Convert.chttps://pillow.readthedo
   cs.io/en/stable/releasenotes/8.3.0.html#buffer-
   overflowhttps://pillow.readthedocs.io/en/stable/releasenotes/index.html
[1m   Fixed versions: [0m8.3.0
[1m   CVE-2021-34552 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40965/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40965 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m67136
[1m   Affected spec: [0m<10.3.0
[1m   ADVISORY: [0mPillow 10.3.0 introduces a security update addressing
   CVE-2024-28219 by replacing certain functions with strncpy to prevent
   buffer overflow issues.
[1m   Fixed versions: [0m10.3.0
[1m   CVE-2024-28219[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/67136/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 67136 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m37780
[1m   Affected spec: [0m<6.2.2
[1m   ADVISORY: [0mlibImaging/SgiRleDecode.c in Pillow before 6.2.2 has an
   SGI buffer overflow.
[1m   Fixed versions: [0m6.2.2
[1m   CVE-2020-5311 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37780/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37780 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m37772
[1m   Affected spec: [0m<6.2.2
[1m   ADVISORY: [0mThere is a DoS vulnerability in Pillow before 6.2.2
   caused by FpxImagePlugin.py calling the range function on an unvalidated
   32-bit integer if the number of bands is large. On Windows running 32-bit
   Python, this results in an OverflowError or MemoryError due to the 2 GB
   limit. However, on Linux running 64-bit Python this results in the process
   being terminated by the OOM killer.
[1m   Fixed versions: [0m6.2.2
[1m   CVE-2019-19911 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37772/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37772 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m37781
[1m   Affected spec: [0m<6.2.2
[1m   ADVISORY: [0mlibImaging/PcxDecode.c in Pillow before 6.2.2 has a PCX
   P mode buffer overflow.
[1m   Fixed versions: [0m6.2.2
[1m   CVE-2020-5312 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37781/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37781 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m37782
[1m   Affected spec: [0m<6.2.2
[1m   ADVISORY: [0mlibImaging/FliDecode.c in Pillow before 6.2.2 has an FLI
   buffer overflow.
[1m   Fixed versions: [0m6.2.2
[1m   CVE-2020-5313 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE SCORE
   7.1, IMPACT SCORE 4.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:H
   CVSS v2, BASE SCORE 5.8, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37782/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37782 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m37779
[1m   Affected spec: [0m<6.2.2
[1m   ADVISORY: [0mlibImaging/TiffDecode.c in Pillow before 6.2.2 has a
   TIFF decoding integer overflow, related to realloc.
[1m   Fixed versions: [0m6.2.2
[1m   CVE-2020-5310 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE SCORE
   8.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 6.8, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37779/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37779 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40593
[1m   Affected spec: [0m<8.2.0
[1m   ADVISORY: [0mPillow 8.2.0 includes a fix for CVE-2021-25288: There is
   an out-of-bounds read in J2kDecode, in j2ku_gray_i.https://pillow.readthed
   ocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix
   -oob-read-in-jpeg2kdecode
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-25288 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.1, IMPACT SCORE 5.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40593/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40593 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40596
[1m   Affected spec: [0m<8.2.0
[1m   ADVISORY: [0mPillow version 8.2.0 includes a fix for CVE-2021-28678:
   For BLP data, BlpImagePlugin did not properly check that reads (after
   jumping to file offsets) returned data. This could lead to a DoS where the
   decoder could be run a large number of times on empty
   data.https://lists.fedoraproject.org/archives/list/package-announce@lists.
   fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/https://github.
   com/python-pillow/Pillow/pull/5377https://pillow.readthedocs.io/en/stable/
   releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-28678 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40596/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40596 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40595
[1m   Affected spec: [0m<8.2.0
[1m   ADVISORY: [0mPillow version 8.2.0 includes a fix for CVE-2021-28677:
   For EPS data, the readline implementation used in EPSImageFile has to deal
   with any combination of \r and \n as line endings. It used an accidentally
   quadratic method of accumulating lines while looking for a line ending. A
   malicious EPS file could use this to perform a DoS of Pillow in the open
   phase, before an image was accepted for
   opening.https://lists.fedoraproject.org/archives/list/package-announce@lis
   ts.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/https://gith
   ub.com/python-pillow/Pillow/pull/5377https://pillow.readthedocs.io/en/stab
   le/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-28677 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40595/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40595 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40594
[1m   Affected spec: [0m<8.2.0
[1m   ADVISORY: [0mPillow version 8.2.0 includes a fix for CVE-2021-28676:
   For FLI data, FliDecode did not properly check that the block advance was
   non-zero, potentially leading to an infinite loop on
   load.https://lists.fedoraproject.org/archives/list/package-announce@lists.
   fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/https://github.
   com/python-pillow/Pillow/pull/5377https://pillow.readthedocs.io/en/stable/
   releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-28676 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40594/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40594 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40592
[1m   Affected spec: [0m<8.2.0
[1m   ADVISORY: [0mPillow 8.2.0 includes a fix for CVE-2021-25287: There is
   an out-of-bounds read in J2kDecode, in j2ku_graya_la.https://pillow.readth
   edocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-f
   ix-oob-read-in-jpeg2kdecode
[1m   Fixed versions: [0m8.2.0
[1m   CVE-2021-25287 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.1, IMPACT SCORE 5.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40592/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40592 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m45356
[1m   Affected spec: [0m<9.0.1
[1m   ADVISORY: [0mPillow before 9.0.1 allows attackers to delete files
   because spaces in temporary pathnames are mishandled.
[1m   Fixed versions: [0m9.0.1
[1m   CVE-2022-24303 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.1, IMPACT SCORE 5.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/45356/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 45356 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m44487
[1m   Affected spec: [0m<9.0.1
[1m   ADVISORY: [0mPillow 9.0.1 includes a fix for CVE-2022-22817:
   PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary
   expressions, such as ones that use the Python exec method. A first patch
   was issued for version 9.0.0 but it did not prevent builtins available to
   lambda expressions.https://pillow.readthedocs.io/en/stable/releasenotes/9.
   0.1.html#security
[1m   Fixed versions: [0m9.0.1
[1m   CVE-2022-22817 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44487/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44487 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m51885
[1m   Affected spec: [0m<9.2.0
[1m   ADVISORY: [0mPillow before 9.2.0 performs Improper Handling of Highly
   Compressed GIF Data (Data Amplification).
[1m   Fixed versions: [0m9.2.0
[1m   CVE-2022-45198 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/51885/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 51885 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40265
[1m   Affected spec: [0m<8.1.0
[1m   ADVISORY: [0mPillow 8.1.0 fixes TIFF OOB Write error. CVE-2020-35654
   #5175.
[1m   Fixed versions: [0m8.1.0
[1m   CVE-2020-35654 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 8.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 6.8, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40265/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40265 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40271
[1m   Affected spec: [0m<8.1.0
[1m   ADVISORY: [0mPillow 8.1.0 includes a fix for SGI Decode buffer
   overrun. CVE-2020-35655 #5173.
[1m   Fixed versions: [0m8.1.0
[1m   CVE-2020-35655 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.4, IMPACT SCORE 2.5, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:L
   CVSS v2, BASE SCORE 5.8, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40271/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40271 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pillow version 5.0.0[0m
[1m   Vulnerability ID: [0m40270
[1m   Affected spec: [0m<8.1.0
[1m   ADVISORY: [0mIn Pillow before 8.1.0, PcxDecode has a buffer over-read
   when decoding a crafted PCX file because the user-supplied stride value is
   trusted for buffer calculations.
[1m   Fixed versions: [0m8.1.0
[1m   CVE-2020-35653 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.1, IMPACT SCORE 4.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:H
   CVSS v2, BASE SCORE 5.8, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40270/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40270 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m61893
[1m   Affected spec: [0m<1.26.18
[1m   ADVISORY: [0mAffected versions of urllib3 are vulnerable to an HTTP
   redirect handling vulnerability that fails to remove the HTTP request body
   when a POST changes to a GET via 301, 302, or 303 responses. This flaw can
   expose sensitive request data if the origin service is compromised and
   redirects to a malicious endpoint, though exploitability is low when no
   sensitive data is used. The vulnerability affects automatic redirect
   behavior. It is fixed in versions 1.26.18 and 2.0.7; update or disable
   redirects using redirects=False.This vulnerability is specific to Python's
   urllib3 library.
[1m   Fixed versions: [0m1.26.18, 2.0.7
[1m   CVE-2023-45803 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   4.2, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/61893/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 61893 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m43975
[1m   Affected spec: [0m<1.26.5
[1m   ADVISORY: [0mUrllib3 1.26.5 includes a fix for CVE-2021-33503: When
   provided with a URL containing many @ characters in the authority
   component, the authority regular expression exhibits catastrophic
   backtracking, causing a denial of service if a URL were passed as a
   parameter or redirected to via an HTTP
   redirect.https://github.com/advisories/GHSA-q2q7-5pp4-w6pg
[1m   Fixed versions: [0m1.26.5
[1m   CVE-2021-33503 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/43975/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 43975 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m71608
[1m   Affected spec: [0m<=1.26.18
[1m   ADVISORY: [0mUrllib3's ProxyManager ensures that the Proxy-
   Authorization header is correctly directed only to configured proxies.
   However, when HTTP requests bypass urllib3's proxy support, there's a risk
   of inadvertently setting the Proxy-Authorization header, which remains
   ineffective without a forwarding or tunneling proxy. Urllib3 does not
   recognize this header as carrying authentication data, failing to remove
   it during cross-origin redirects. While this scenario is uncommon and
   poses low risk to most users, urllib3 now proactively removes the Proxy-
   Authorization header during cross-origin redirects as a precautionary
   measure. Users are advised to utilize urllib3's proxy support or disable
   automatic redirects to handle the Proxy-Authorization header securely.
   Despite these precautions, urllib3 defaults to stripping the header to
   safeguard users who may inadvertently misconfigure requests.
[1m   Fixed versions: [0m1.26.19, 2.2.2
[1m   CVE-2024-37891 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   4.4, IMPACT SCORE 3.6, VECTOR STRING AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/71608/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 71608 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m71562
[1m   Affected spec: [0m<1.24.2
[1m   ADVISORY: [0mAffected versions of urllib3 affected versions are
   vulnerable due to an issue where the authorization HTTP header is not
   removed when following a cross-origin redirect. This can result in
   credentials within the authorization header being exposed to unintended
   hosts or transmitted in cleartext. This vulnerability exists because of an
   incomplete fix for CVE-2018-20060, which addressed a similar issue case-
   sensitively.
[1m   Fixed versions: [0m1.24.2
[1m   CVE-2018-25091 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/71562/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 71562 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m37071
[1m   Affected spec: [0m<1.24.2
[1m   ADVISORY: [0mAffected versions of urllib3 are vulnerable Improper
   Certificate Validation. Urllib3 mishandles certain cases where the desired
   set of CA certificates is different from the OS store of CA certificates,
   which results in SSL connections succeeding in situations where a
   verification failure is the correct outcome. This is related to the use of
   the ssl_context, ca_certs, or ca_certs_dir argument.
[1m   Fixed versions: [0m1.24.2
[1m   CVE-2019-11324 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37071/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37071 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m37055
[1m   Affected spec: [0m<1.24.3
[1m   ADVISORY: [0mUrllib3 1.24.3 includes a fix for CVE-2019-11236: CRLF
   injection is possible if the attacker controls the request parameter.https
   ://github.com/urllib3/urllib3/commit/5d523706c7b03f947dc50a7e783758a2bfff0
   532https://github.com/urllib3/urllib3/issues/1553
[1m   Fixed versions: [0m1.24.3
[1m   CVE-2019-11236 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37055/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37055 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m38834
[1m   Affected spec: [0m<1.25.9
[1m   ADVISORY: [0mUrllib3 1.25.9 includes a fix for CVE-2020-26137:
   Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the
   HTTP request method, as demonstrated by inserting CR and LF control
   characters in the first argument of putrequest(). NOTE: this is similar to
   CVE-2020-26116.https://github.com/python/cpython/issues/83784https://githu
   b.com/urllib3/urllib3/pull/1800
[1m   Fixed versions: [0m1.25.9
[1m   CVE-2020-26137 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.5, IMPACT SCORE 2.5, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
   CVSS v2, BASE SCORE 6.4, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38834/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38834 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in urllib3 version 1.24.1[0m
[1m   Vulnerability ID: [0m61601
[1m   Affected spec: [0m<1.26.17
[1m   ADVISORY: [0mUrllib3 1.26.17 and 2.0.5 include a fix for
   CVE-2023-43804: Urllib3 doesn't treat the 'Cookie' HTTP header special or
   provide any helpers for managing cookies over HTTP, that is the
   responsibility of the user. However, it is possible for a user to specify
   a 'Cookie' header and unknowingly leak information via HTTP redirects to a
   different origin if that user doesn't disable redirects explicitly.https:/
   /github.com/urllib3/urllib3/security/advisories/GHSA-v845-jxx5-vc9f
[1m   Fixed versions: [0m1.26.17, 2.0.5
[1m   CVE-2023-43804 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 8.1, IMPACT SCORE 5.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/61601/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 61601 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in requests version 2.20.0[0m
[1m   Vulnerability ID: [0m58755
[1m   Affected spec: [0m>=2.3.0,<2.31.0
[1m   ADVISORY: [0mAffected versions of Requests are vulnerable to proxy
   credential leakage. When redirected to an HTTPS endpoint, the Proxy-
   Authorization header is forwarded to the destination server due to the use
   of rebuild_proxies to reattach the header. This may allow a malicious
   actor to exfiltrate sensitive information.
[1m   Fixed versions: [0m2.31.0
[1m   CVE-2023-32681 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 4.0, VECTOR STRING
   CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/58755/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 58755 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in requests version 2.20.0[0m
[1m   Vulnerability ID: [0m71064
[1m   Affected spec: [0m<2.32.2
[1m   ADVISORY: [0mAffected versions of Requests, when making requests
   through a Requests `Session`, if the first request is made with
   `verify=False` to disable cert verification, all subsequent requests to
   the same host will continue to ignore cert verification regardless of
   changes to the value of `verify`. This behavior will continue for the
   lifecycle of the connection in the connection pool. Requests 2.32.0 fixes
   the issue, but versions 2.32.0 and 2.32.1 were yanked due to conflicts
   with CVE-2024-35195 mitigation.
[1m   Fixed versions: [0m2.32.2
[1m   CVE-2024-35195 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.6, IMPACT SCORE 5.2, VECTOR STRING AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/71064/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 71064 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pyyaml version 5.1[0m
[1m   Vulnerability ID: [0m39611
[1m   Affected spec: [0m<5.4
[1m   ADVISORY: [0mPyyaml version 5.4 includes a fix for CVE-2020-14343: A
   vulnerability was discovered in the PyYAML library in versions before 5.4,
   where it is susceptible to arbitrary code execution when it processes
   untrusted YAML files through the full_load method or with the FullLoader
   loader. Applications that use the library to process untrusted input may
   be vulnerable to this flaw. This flaw allows an attacker to execute
   arbitrary code on the system by abusing the python/object/new constructor.
   This flaw is due to an incomplete fix for
   CVE-2020-1747.https://bugzilla.redhat.com/show_bug.cgi?id=1860466
[1m   Fixed versions: [0m5.4
[1m   CVE-2020-14343 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 10.0, IMPACT SCORE 10.0, VECTOR STRING
   AV:N/AC:L/Au:N/C:C/I:C/A:C
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39611/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39611 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pyyaml version 5.1[0m
[1m   Vulnerability ID: [0m38639
[1m   Affected spec: [0m>=5.1,<=5.1.2
[1m   ADVISORY: [0mPyYAML 5.1 through 5.1.2 has insufficient restrictions
   on the load and load_all functions because of a class deserialization
   issue, e.g., Popen is a class in the subprocess module. See
   CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for
   CVE-2017-18342.
[1m   Fixed versions: [0m5.2b1
[1m   CVE-2019-20477 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38639/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38639 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in pyyaml version 5.1[0m
[1m   Vulnerability ID: [0m38100
[1m   Affected spec: [0m<5.3.1
[1m   ADVISORY: [0mPyyaml 5.3.1 includes a fix for CVE-2020-1747: A
   vulnerability was discovered in the PyYAML library in versions before
   5.3.1, where it is susceptible to arbitrary code execution when it
   processes untrusted YAML files through the full_load method or with the
   FullLoader loader. Applications that use the library to process untrusted
   input may be vulnerable to this flaw. An attacker could use this flaw to
   execute arbitrary code on the system by abusing the python/object/new
   constructor.
[1m   Fixed versions: [0m5.3.1
[1m   CVE-2020-1747 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 10.0, IMPACT SCORE 10.0, VECTOR STRING
   AV:N/AC:L/Au:N/C:C/I:C/A:C
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38100/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38100 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m36884
[1m   Affected spec: [0m<1.11.19
[1m   ADVISORY: [0mDjango 1.11.19, 2.0.11 and 2.1.6 include a fix for
   CVE-2019-6975: Uncontrolled Memory Consumption via a malicious attacker-
   supplied value to the django.utils.numberformat.format() function.
[1m   Fixed versions: [0m2.0.12, 1.11.20, 2.1.7
[1m   CVE-2019-6975 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE SCORE
   7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/36884/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 36884 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m60956
[1m   Affected spec: [0m<3.2.21
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to potential
   Denial of Service via certain inputs with a very large number of Unicode
   characters in django.utils.encoding.uri_to_iri().
[1m   Fixed versions: [0m3.2.21, 4.1.11, 4.2.5
[1m   CVE-2023-41164 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/60956/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 60956 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m44741
[1m   Affected spec: [0m<2.2.27
[1m   ADVISORY: [0mDjango 2.2.27, 3.2.12 and 4.0.2 include a fix for
   CVE-2022-23833: Denial-of-service possibility in file
   uploads.https://www.djangoproject.com/weblog/2022/feb/01/security-releases
[1m   Fixed versions: [0m2.2.27, 3.2.12, 4.0.2
[1m   CVE-2022-23833 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44741/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44741 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m44742
[1m   Affected spec: [0m<2.2.27
[1m   ADVISORY: [0mThe {% debug %} template tag in Django 2.2 before
   2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode
   the current context. This may lead to XSS.
[1m   Fixed versions: [0m2.2.27, 3.2.12, 4.0.2
[1m   CVE-2022-22818 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44742/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44742 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m74396
[1m   Affected spec: [0m<4.2.17
[1m   ADVISORY: [0mDjango affected versions are vulnerable to a potential
   SQL injection in the HasKey(lhs, rhs) lookup on Oracle databases. The
   vulnerability arises when untrusted data is directly used as the lhs value
   in the django.db.models.fields.json.HasKey lookup. However, applications
   using the jsonfield.has_key lookup with the __ syntax remain unaffected by
   this issue.
[1m   Fixed versions: [0m4.2.17, 5.0.10, 5.1.4
[1m   CVE-2024-53908[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/74396/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 74396 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m74395
[1m   Affected spec: [0m<4.2.17
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to a
   potential denial-of-service (DoS) attack in the
   `django.utils.html.strip_tags()` method. The vulnerability occurs when the
   `strip_tags()` method or the `striptags` template filter processes inputs
   containing large sequences of nested, incomplete HTML entities.
[1m   Fixed versions: [0m4.2.17, 5.0.10, 5.1.4
[1m   CVE-2024-53907[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/74395/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 74395 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m44427
[1m   Affected spec: [0m<2.2.26
[1m   ADVISORY: [0mDjango 2.2.26, 3.2.11 and 4.0.1 include a fix for
   CVE-2021-45116: An issue was discovered in Django 2.2 before 2.2.26, 3.2
   before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template
   Language's variable resolution logic, the dictsort template filter was
   potentially vulnerable to information disclosure, or an unintended method
   call, if passed a suitably crafted
   key.https://www.djangoproject.com/weblog/2022/jan/04/security-releases
[1m   Fixed versions: [0m2.2.26, 3.2.11, 4.0.1
[1m   CVE-2021-45116 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44427/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44427 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m44423
[1m   Affected spec: [0m<2.2.26
[1m   ADVISORY: [0mDjango 2.2.26, 3.2.11 and 4.0.1 include a fix for
   CVE-2021-45115: UserAttributeSimilarityValidator incurred significant
   overhead in evaluating a submitted password that was artificially large in
   relation to the comparison values. In a situation where access to user
   registration was unrestricted, this provided a potential vector for a
   denial-of-service
   attack.https://www.djangoproject.com/weblog/2022/jan/04/security-releases/
[1m   Fixed versions: [0m2.2.26, 3.2.11, 4.0.1
[1m   CVE-2021-45115 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44423/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44423 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m44426
[1m   Affected spec: [0m<2.2.26
[1m   ADVISORY: [0mDjango 2.2.26, 3.2.11 and 4.0.1 include a fix for
   CVE-2021-45452: Storage.save in Django 2.2 before 2.2.26, 3.2 before
   3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted
   filenames are directly passed to
   it.https://www.djangoproject.com/weblog/2022/jan/04/security-releases/
[1m   Fixed versions: [0m2.2.26, 3.2.11, 4.0.1
[1m   CVE-2021-45452 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.3, IMPACT SCORE 1.4, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/44426/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 44426 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m37661
[1m   Affected spec: [0m>=1.11a1,<1.11.27
[1m   ADVISORY: [0mDjango 1.11.27, 2.2.9 and 3.0.1 include a fix for
   CVE-2019-19844: Account takeover. A suitably crafted email address (that
   is equal to an existing user's email address after case transformation of
   Unicode characters) would allow an attacker to be sent a password reset
   token for the matched user account. One mitigation in the new releases is
   to send password reset tokens only to the registered user email address.
[1m   Fixed versions: [0m1.11.27, 2.2.9, 3.0.1
[1m   CVE-2019-19844 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37661/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37661 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72109
[1m   Affected spec: [0m<4.2.14
[1m   ADVISORY: [0mAffected versions of Django are affected by a username
   enumeration vulnerability caused by timing differences in the
   django.contrib.auth.backends.ModelBackend.authenticate() method. This
   method allowed remote attackers to enumerate users through a timing attack
   involving login requests for users with unusable passwords. The timing
   difference in the authentication process exposed whether a username was
   valid or not, potentially aiding attackers in gaining unauthorized access.
[1m   Fixed versions: [0m4.2.14, 5.0.7
[1m   CVE-2024-39329[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72109/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72109 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72095
[1m   Affected spec: [0m<4.2.14
[1m   ADVISORY: [0mAffected versions of Django are affected by a potential
   denial-of-service vulnerability in the django.utils.html.urlize()
   function. The urlize and urlizetrunc template filters were susceptible to
   a denial-of-service attack via certain inputs containing many brackets. An
   attacker could exploit this vulnerability to cause significant delays or
   crashes in the affected application.
[1m   Fixed versions: [0m4.2.14, 5.0.7
[1m   CVE-2024-38875[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72095/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72095 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72110
[1m   Affected spec: [0m<4.2.14
[1m   ADVISORY: [0mAffected versions of Django are affected by a directory-
   traversal vulnerability in the Storage.save() method. Derived classes of
   the django.core.files.storage.Storage base class that overrides the
   generate_filename() method without replicating the file path validations
   existing in the parent class could allow for directory traversal via
   certain inputs when calling save(). This could enable an attacker to
   manipulate file paths and access unintended directories.
[1m   Fixed versions: [0m4.2.14, 5.0.7
[1m   CVE-2024-39330[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72110/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72110 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72111
[1m   Affected spec: [0m<4.2.14
[1m   ADVISORY: [0mAffected versions of Django are potentially vulnerable
   to denial-of-service via the get_supported_language_variant() method. This
   method was susceptible to a denial-of-service attack when used with very
   long strings containing specific characters. Exploiting this vulnerability
   could cause significant delays or crashes in the affected application,
   potentially leading to service disruption.
[1m   Fixed versions: [0m4.2.14, 5.0.7
[1m   CVE-2024-39614[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72111/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72111 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m50454
[1m   Affected spec: [0m<3.2.15
[1m   ADVISORY: [0mDjango 3.2.15 and 4.0.7 include a fix for
   CVE-2022-36359: An issue was discovered in the HTTP FileResponse class in
   Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is
   vulnerable to a reflected file download (RFD) attack that sets the
   Content-Disposition header of a FileResponse when the filename is derived
   from user-supplied
   input.https://www.djangoproject.com/weblog/2022/aug/03/security-releases
[1m   Fixed versions: [0m3.2.15, 4.0.7
[1m   CVE-2022-36359 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 8.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/50454/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 50454 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m34918
[1m   Affected spec: [0m>=1.11a1,<1.11.5
[1m   ADVISORY: [0mDjango 1.10.8 and 1.11.5 include a fix for
   CVE-2017-12794: In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5,
   HTML autoescaping was disabled in a portion of the template for the
   technical 500 debug page. Given the right circumstances, this allowed a
   cross-site scripting attack. This vulnerability shouldn't affect most
   production sites since you shouldn't run with "DEBUG = True" (which makes
   this page accessible) in your production
   settings.https://www.djangoproject.com/weblog/2017/sep/05/security-
   releases
[1m   Fixed versions: [0m1.10.8, 1.11.5
[1m   CVE-2017-12794 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/34918/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 34918 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m59293
[1m   Affected spec: [0m<3.2.20
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to a
   potential ReDoS (regular expression denial of service) in EmailValidator
   and URLValidator via a very large number of domain name labels of emails
   and URLs.
[1m   Fixed versions: [0m4.1.10, 4.2.3, 3.2.20
[1m   CVE-2023-36053 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/59293/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 59293 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m61586
[1m   Affected spec: [0m<3.2.22
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to Denial-of-
   Service via django.utils.text.Truncator. The django.utils.text.Truncator
   chars() and words() methods (when used with html=True) are subject to a
   potential DoS (denial of service) attack via certain inputs with very
   long, potentially malformed HTML text. The chars() and words() methods are
   used to implement the truncatechars_html and truncatewords_html template
   filters, which are thus also vulnerable. NOTE: this issue exists because
   of an incomplete fix for CVE-2019-14232.
[1m   Fixed versions: [0m3.2.22, 4.1.12, 4.2.6
[1m   CVE-2023-43665 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/61586/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 61586 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m49733
[1m   Affected spec: [0m<3.2.14
[1m   ADVISORY: [0mDjango 3.2.14 and 4.0.6 include a fix for
   CVE-2022-34265: Potential SQL injection via Trunc(kind) and
   Extract(lookup_name)
   arguments.https://www.djangoproject.com/weblog/2022/jul/04/security-
   releases
[1m   Fixed versions: [0m3.2.14, 4.0.6
[1m   CVE-2022-34265 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/49733/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 49733 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m37815
[1m   Affected spec: [0m>=1.11a1,<1.11.28
[1m   ADVISORY: [0mDjango 1.11.28, 2.2.10 and 3.0.3 include a fix for
   CVE-2020-7471: SQL Injection if untrusted data is used as a StringAgg
   delimiter (e.g., in Django applications that offer downloads of data as a
   series of rows with a user-specified column delimiter). By passing a
   suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg
   instance, it was possible to break escaping and inject malicious SQL.
[1m   Fixed versions: [0m1.11.28, 2.2.10, 3.0.3
[1m   CVE-2020-7471 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37815/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37815 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m36368
[1m   Affected spec: [0m>=1.11a1,<1.11.15
[1m   ADVISORY: [0mdjango.middleware.common.CommonMiddleware in Django
   1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect. A
   remote user can redirect the target user's browser to an arbitrary site.
[1m   Fixed versions: [0m1.11.15, 2.0.8
[1m   CVE-2018-14574 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 5.8, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:P/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/36368/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 36368 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m51340
[1m   Affected spec: [0m<3.2.16
[1m   ADVISORY: [0mIn Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1
   before 4.1.2, internationalized URLs were subject to a potential denial of
   service attack via the locale parameter, which is treated as a regular
   expression.
[1m   Fixed versions: [0m3.2.16, 4.0.8, 4.1.2
[1m   CVE-2022-41323 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/51340/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 51340 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m73028
[1m   Affected spec: [0m<4.2.16
[1m   ADVISORY: [0mA security vulnerability has been discovered in certain
   versions of Django, affecting the password reset functionality. The
   PasswordResetForm class in django.contrib.auth.forms inadvertently allowed
   attackers to enumerate user email addresses by exploiting unhandled
   exceptions during the email sending process. This could be done by issuing
   password reset requests and observing the responses. Django has
   implemented a fix where these exceptions are now caught and logged using
   the django.contrib.auth logger, preventing potential information leakage
   through error responses.
[1m   Fixed versions: [0m4.2.16, 5.0.9, 5.1.1
[1m   CVE-2024-45231 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.3, IMPACT SCORE 1.4, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/73028/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 73028 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m73023
[1m   Affected spec: [0m<4.2.16
[1m   ADVISORY: [0mA potential denial-of-service vulnerability has been
   identified in Django's urlize() and urlizetrunc() functions in
   django.utils.html. This vulnerability can be triggered by inputting huge
   strings containing a specific sequence of characters.
[1m   Fixed versions: [0m4.2.16, 5.0.9, 5.1.1
[1m   CVE-2024-45230 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/73023/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 73023 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m43041
[1m   Affected spec: [0m<2.2.25
[1m   ADVISORY: [0mDjango versions 2.2.25, 3.1.14 and 3.2.10 include a fix
   for CVE-2021-44420: In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and
   3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could
   bypass upstream access control based on URL
   paths.https://www.djangoproject.com/weblog/2021/dec/07/security-releases/
[1m   Fixed versions: [0m2.2.25, 3.2.10, 3.1.14
[1m   CVE-2021-44420 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.3, IMPACT SCORE 3.4, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/43041/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 43041 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m40637
[1m   Affected spec: [0m<2.2.24
[1m   ADVISORY: [0mDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x
   before 3.2.4 has a potential directory traversal via
   django.contrib.admindocs. Staff members could use the TemplateDetailView
   view to check the existence of arbitrary files. Additionally, if (and only
   if) the default admindocs templates have been customized by application
   developers to also show file contents, then not only the existence but
   also the file contents would have been exposed. In other words, there is
   directory traversal outside of the template root
   directories.https://www.djangoproject.com/weblog/2021/jun/02/security-
   releases
[1m   Fixed versions: [0m2.2.24, 3.1.12, 3.2.4
[1m   CVE-2021-33203 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   4.9, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 4.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:S/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40637/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40637 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m40638
[1m   Affected spec: [0m<2.2.24
[1m   ADVISORY: [0mDjango 2.2.24, 3.1.12, and 3.2.4 include a fix for
   CVE-2021-33571: In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2
   before 3.2.4, URLValidator, validate_ipv4_address, and
   validate_ipv46_address do not prohibit leading zero characters in octal
   literals. This may allow a bypass of access control that is based on IP
   addresses. (validate_ipv4_address and validate_ipv46_address are
   unaffected with Python
   3.9.5+).https://www.djangoproject.com/weblog/2021/jun/02/security-releases
[1m   Fixed versions: [0m3.1.12, 3.2.4, 2.2.24
[1m   CVE-2021-33571 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40638/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40638 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m75744
[1m   Affected spec: [0m<4.2.20
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to a
   potential denial-of-service in django.utils.text.wrap(). The
   django.utils.text.wrap() and wordwrap template filter were subject to a
   potential denial-of-service attack when used with very long strings.
[1m   Fixed versions: [0m4.2.20, 5.0.13, 4.2.20
[1m   CVE-2025-26699[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/75744/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 75744 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m74985
[1m   Affected spec: [0m<4.2.18
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to a
   potential denial-of-service attack due to improper IPv6 validation. The
   lack of upper limit enforcement for input strings in clean_ipv6_address,
   is_valid_ipv6_address, and the django.forms.GenericIPAddressField form
   field allowed attackers to exploit overly long inputs, causing resource
   exhaustion. The vulnerability is addressed by defining a max_length of 39
   characters for affected form fields. The
   django.db.models.GenericIPAddressField model field was not impacted. Users
   should upgrade promptly.
[1m   Fixed versions: [0m4.2.18, 5.0.11, 5.1.5
[1m   CVE-2024-56374[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/74985/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 74985 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m53315
[1m   Affected spec: [0m<3.2.18
[1m   ADVISORY: [0mDjango 4.1.7, 4.0.10 and 3.2.18 include a fix for
   CVE-2023-24580: Potential denial-of-service vulnerability in file
   uploads.https://www.djangoproject.com/weblog/2023/feb/14/security-releases
[1m   Fixed versions: [0m3.2.18, 4.0.10, 4.1.7
[1m   CVE-2023-24580 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/53315/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 53315 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m48041
[1m   Affected spec: [0m<2.2.28
[1m   ADVISORY: [0mDjango 2.2.28, 3.2.13 and 4.0.4 include a fix for
   CVE-2022-28346: An issue was discovered in Django 2.2 before 2.2.28, 3.2
   before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and
   extra() methods are subject to SQL injection in column aliases via a
   crafted dictionary (with dictionary expansion) as the passed
   **kwargs.https://www.djangoproject.com/weblog/2022/apr/11/security-
   releases
[1m   Fixed versions: [0m2.2.28, 3.2.13, 4.0.4
[1m   CVE-2022-28346 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/48041/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 48041 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m48040
[1m   Affected spec: [0m<2.2.28
[1m   ADVISORY: [0mDjango 2.2.28, 3.2.13 and 4.0.4 include a fix for
   CVE-2022-28347: A SQL injection issue was discovered in QuerySet.explain()
   in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This
   occurs by passing a crafted dictionary (with dictionary expansion) as the
   **options argument, and placing the injection payload in an option
   name.https://www.djangoproject.com/weblog/2022/apr/11/security-releases
[1m   Fixed versions: [0m2.2.28, 3.2.13, 4.0.4
[1m   CVE-2022-28347 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/48040/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 48040 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m39592
[1m   Affected spec: [0m>=1.11a1,<1.11.23
[1m   ADVISORY: [0mDjango 1.11.23, 2.1.11 and 2.2.4 include a fix for
   CVE-2019-14234: Due to an error in shallow key transformation, key and
   index lookups for django.contrib.postgres.fields.JSONField, and key
   lookups for django.contrib.postgres.fields.HStoreField, were subject to
   SQL injection. This could, for example, be exploited via crafted use of
   "OR 1=1" in a key or index name to return all records, using a suitably
   crafted dictionary, with dictionary expansion, as the **kwargs passed to
   the QuerySet.filter() function.
[1m   Fixed versions: [0m1.11.23, 2.1.11, 2.2.4
[1m   CVE-2019-14234 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
   CVSS v2, BASE SCORE 7.5, IMPACT SCORE 6.4, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39592/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39592 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m39591
[1m   Affected spec: [0m>=1.11a1,<1.11.23
[1m   ADVISORY: [0mDjango 1.11.23, 2.1.11 and 2.2.4 includes a fix for
   CVE-2019-14235: If passed certain inputs, django.utils.encoding.uri_to_iri
   could lead to significant memory usage due to a recursion when repercent-
   encoding invalid UTF-8 octet sequences.
[1m   Fixed versions: [0m1.11.23, 2.1.11, 2.2.4
[1m   CVE-2019-14235 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39591/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39591 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m39593
[1m   Affected spec: [0m>=1.11a1,<1.11.23
[1m   ADVISORY: [0mDjango 1.11.23, 2.1.11, and 2.2.4 include a fix for
   CVE-2019-14233: Due to the behavior of the underlying HTMLParser,
   django.utils.html.strip_tags would be extremely slow to evaluate certain
   inputs containing large sequences of nested incomplete HTML entities.
[1m   Fixed versions: [0m1.11.23, 2.1.11, 2.2.4
[1m   CVE-2019-14233 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39593/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39593 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m37261
[1m   Affected spec: [0m>=1.11a1,<1.11.22
[1m   ADVISORY: [0mAn issue was discovered in Django 1.11 before 1.11.22,
   2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected
   to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings
   are used, and the proxy connects to Django via HTTPS. In other words,
   django.http.HttpRequest.scheme has incorrect behavior when a client uses
   HTTP.
[1m   Fixed versions: [0m1.11.22, 2.2.3, 2.1.10
[1m   CVE-2019-12781 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.3, IMPACT SCORE 1.4, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37261/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37261 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m35796
[1m   Affected spec: [0m>=1.11a1,<1.11.11
[1m   ADVISORY: [0mDjango 2.0.3, 1.8.19 and 1.11.11 include a fix for
   CVE-2018-7537: An issue was discovered in Django 2.0 before 2.0.3, 1.11
   before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's
   chars() and words() methods were passed the html=True argument, they were
   extremely slow to evaluate certain inputs due to a catastrophic
   backtracking vulnerability in a regular expression. The chars() and
   words() methods are used to implement the truncatechars_html and
   truncatewords_html template filters, which were thus vulnerable.
[1m   Fixed versions: [0m2.0.3, 1.8.19, 1.11.11
[1m   CVE-2018-7537 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.3, IMPACT SCORE 1.4, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/35796/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 35796 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m35797
[1m   Affected spec: [0m>=1.11a1,<1.11.11
[1m   ADVISORY: [0mAn issue was discovered in Django 2.0 before 2.0.3, 1.11
   before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize()
   function was extremely slow to evaluate certain inputs due to catastrophic
   backtracking vulnerabilities in two regular expressions (only one regular
   expression for Django 1.8.x). The urlize() function is used to implement
   the urlize and urlizetrunc template filters, which were thus vulnerable.
   See: CVE-2018-7536.
[1m   Fixed versions: [0m2.0.3, 1.8.19, 1.11.11
[1m   CVE-2018-7536 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.3, IMPACT SCORE 1.4, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/35797/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 35797 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m37326
[1m   Affected spec: [0m<1.11.23
[1m   ADVISORY: [0mDjango 1.11.23, 2.1.11 and 2.2.4 include a fix for
   CVE-2019-14232: If django.utils.text.Truncator's chars() and words()
   methods were passed the html=True argument, they were extremely slow to
   evaluate certain inputs due to a catastrophic backtracking vulnerability
   in a regular expression. The chars() and words() methods are used to
   implement the truncatechars_html and truncatewords_html template filters,
   which were thus vulnerable.
[1m   Fixed versions: [0m2.1.11, 2.2.4, 1.11.23
[1m   CVE-2019-14232 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37326/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37326 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m64976
[1m   Affected spec: [0m<3.2.24
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to potential
   denial-of-service in intcomma template filter when used with very long
   strings.
[1m   Fixed versions: [0m3.2.24, 4.2.10, 5.0.2
[1m   CVE-2024-24680 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/64976/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 64976 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m65771
[1m   Affected spec: [0m<3.2.25
[1m   ADVISORY: [0mAffected versions of Django are vulnerable to potential
   regular expression denial-of-service (REDoS).
   django.utils.text.Truncator.words() method (with html=True) and
   truncatewords_html template filter were subject to a potential regular
   expression denial-of-service attack using a suitably crafted string
   (follow up to CVE-2019-14232 and CVE-2023-43665).
[1m   Fixed versions: [0m3.2.25, 4.2.11, 5.0.3
[1m   CVE-2024-27351[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/65771/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 65771 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m55264
[1m   Affected spec: [0m<3.2.19
[1m   ADVISORY: [0mDjango 4.2.1, 4.1.9 and 3.2.19 include a fix for
   CVE-2023-31047: In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2
   before 4.2.1, it was possible to bypass validation when using one form
   field to upload multiple files. This multiple upload has never been
   supported by forms.FileField or forms.ImageField (only the last uploaded
   file was validated). However, Django's "Uploading multiple files"
   documentation suggested
   otherwise.https://www.djangoproject.com/weblog/2023/may/03/security-
   releases
[1m   Fixed versions: [0m3.2.19, 4.1.9, 4.2.1
[1m   CVE-2023-31047 is [0m[31m[1mCRITICAL SEVERITY => [0mCVSS v3, BASE
   SCORE 9.8, IMPACT SCORE 5.9, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/55264/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 55264 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m77119
[1m   Affected spec: [0m<4.2.21
[1m   ADVISORY: [0mAn issue was discovered in Django 4.2 before 4.2.21, 5.1
   before 5.1.9, and 5.2 before 5.2.1. The django.utils.html.strip_tags()
   function is vulnerable to a potential denial-of-service (slow performance)
   when processing inputs containing large sequences of incomplete HTML tags.
   The template filter striptags is also vulnerable, because it is built on
   top of strip_tags().
[1m   Fixed versions: [0m5.2.1, 5.1.9, 4.2.21
[1m   CVE-2025-32873[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/77119/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 77119 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m37186
[1m   Affected spec: [0m>=1.11a1,<1.11.21
[1m   ADVISORY: [0mDjango 1.11.21, 2.1.9 and 2.2.2 include a fix for
   CVE-2019-12308: The clickable Current URL value displayed by the
   AdminURLFieldWidget displays the provided value without validating it as a
   safe URL. Thus, a non validated value stored in the database, or a value
   provided as a URL query parameter payload, could result in an clickable
   JavaScript link.
[1m   Fixed versions: [0m1.11.21, 2.1.9, 2.2.2
[1m   CVE-2019-12308 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/37186/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 37186 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m39646
[1m   Affected spec: [0m<2.2.19
[1m   ADVISORY: [0mDjango versions 2.2.19, 3.0.13 and 3.1.7 include a fix
   for CVE-2021-23336: Web cache poisoning via
   'django.utils.http.limited_parse_qsl()'. Django contains a copy of
   'urllib.parse.parse_qsl' which was added to backport some security fixes.
   A further security fix has been issued recently such that 'parse_qsl(' no
   longer allows using ';' as a query parameter separator by default.
[1m   Fixed versions: [0m3.0.13, 3.1.7, 2.2.19
[1m   CVE-2021-23336 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   5.9, IMPACT SCORE 4.2, VECTOR STRING
   CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H
   CVSS v2, BASE SCORE 4.0, IMPACT SCORE 4.9, VECTOR STRING
   AV:N/AC:H/Au:N/C:N/I:P/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39646/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39646 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m38749
[1m   Affected spec: [0m<2.2.16
[1m   ADVISORY: [0mDjango 2.2.16, 3.0.10 and 3.1.1 include a fix for
   CVE-2020-24583: An issue was discovered in Django 2.2 before 2.2.16, 3.0
   before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used).
   FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-
   level directories created in the process of uploading files. It was also
   not applied to intermediate-level collected static directories when using
   the collectstatic management command.#NOTE: This vulnerability affects
   only users of Python versions above
   3.7.https://www.djangoproject.com/weblog/2020/sep/01/security-releases
[1m   Fixed versions: [0m2.2.16, 3.0.10, 3.1.1
[1m   CVE-2020-24583 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38749/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38749 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m38752
[1m   Affected spec: [0m<2.2.16
[1m   ADVISORY: [0mAn issue was discovered in Django 2.2 before 2.2.16, 3.0
   before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The
   intermediate-level directories of the filesystem cache had the system's
   standard umask rather than 0o077.
[1m   Fixed versions: [0m2.2.16, 3.0.10, 3.1.1
[1m   CVE-2020-24584 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38752/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38752 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m62126
[1m   Affected spec: [0m<3.2.23
[1m   ADVISORY: [0mDjango 4.2.7, 4.1.13 and 3.2.23 include a fix for
   CVE-2023-46695: Potential denial of service vulnerability in UsernameField
   on Windows.https://www.djangoproject.com/weblog/2023/nov/01/security-
   releases
[1m   Fixed versions: [0m3.2.23, 4.1.13, 4.2.7
[1m   CVE-2023-46695 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/62126/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 62126 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m60132
[1m   Affected spec: [0m<1.11.16
[1m   ADVISORY: [0mDjango 1.11.16, 2.0.9 and 2.1.1 include a fix for a Race
   Condition vulnerability that could lead to data loss.https://github.com/dj
   ango/django/commit/221ef69a9b89262456bb7abe0e5a4b2fda4a0695
[1m   Fixed versions: [0m2.1.1, 2.0.9, 1.11.16
[1m   PVE-2023-60132[0m
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/60132/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 60132 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m40404
[1m   Affected spec: [0m<2.2.21
[1m   ADVISORY: [0mDjango 2.2.21, 3.1.9 and 3.2.1 include a fix for
   CVE-2021-31542: MultiPartParser, UploadedFile, and FieldFile allowed
   directory traversal via uploaded files with suitably crafted file
   names.https://www.djangoproject.com/weblog/2021/may/04/security-releases
[1m   Fixed versions: [0m3.2.1, 2.2.21, 3.1.9
[1m   CVE-2021-31542 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:P/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/40404/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 40404 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72515
[1m   Affected spec: [0m<4.2.15
[1m   ADVISORY: [0mDjango addresses a memory exhaustion issue in
   django.utils.numberformat.floatformat(). When floatformat receives a
   string representation of a number in scientific notation with a large
   exponent, it could lead to excessive memory consumption. To prevent this,
   decimals with more than 200 digits are now returned as-is.
[1m   Fixed versions: [0m4.2.15, 5.0.8
[1m   CVE-2024-41990 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72515/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72515 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72521
[1m   Affected spec: [0m<4.2.15
[1m   ADVISORY: [0mAffected versions of Django has a potential SQL
   injection vulnerability in the QuerySet.values() and
   QuerySet.values_list() methods. When used on models with a JSONField,
   these methods are susceptible to SQL injection through column aliases if a
   crafted JSON object key is passed as an argument.
[1m   Fixed versions: [0m4.2.15, 5.0.8
[1m   CVE-2024-42005 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.3, IMPACT SCORE 3.4, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72521/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72521 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m72520
[1m   Affected spec: [0m<4.2.15
[1m   ADVISORY: [0mDjango has a potential denial-of-service vulnerability
   in django.utils.html.urlize() and AdminURLFieldWidget. The urlize and
   urlizetrunc functions, along with AdminURLFieldWidget, are vulnerable to
   denial-of-service attacks when handling inputs with a very large number of
   Unicode characters.
[1m   Fixed versions: [0m4.2.15, 5.0.8
[1m   CVE-2024-41991 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/72520/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 72520 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m39594
[1m   Affected spec: [0m<2.1.9
[1m   ADVISORY: [0mDjango versions 2.1.9 and 2.2.2 include a patched
   bundled jQuery version to avoid a Prototype Pollution vulnerability.
[1m   Fixed versions: [0m2.1.9, 2.2.2
[1m   CVE-2019-11358 is [0m[1mMEDIUM SEVERITY => [0mCVSS v3, BASE SCORE
   6.1, IMPACT SCORE 2.7, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
   CVSS v2, BASE SCORE 4.3, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:M/Au:N/C:N/I:P/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/39594/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 39594 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in django version 1.11.3[0m
[1m   Vulnerability ID: [0m52945
[1m   Affected spec: [0m<3.2.17
[1m   ADVISORY: [0mDjango 3.2.17, 4.0.9 and 4.1.6 includes a fix for
   CVE-2023-23969: In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1
   before 4.1.6, the parsed values of Accept-Language headers are cached in
   order to avoid repetitive parsing. This leads to a potential denial-of-
   service vector via excessive memory usage if the raw value of Accept-
   Language headers is very
   large.https://www.djangoproject.com/weblog/2023/feb/01/security-releases
[1m   Fixed versions: [0m3.2.17, 4.0.9, 4.1.6
[1m   CVE-2023-23969 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/52945/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 52945 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in flask version 0.12.1[0m
[1m   Vulnerability ID: [0m55261
[1m   Affected spec: [0m<2.2.5
[1m   ADVISORY: [0mFlask 2.2.5 and 2.3.2 include a fix for CVE-2023-30861:
   When all of the following conditions are met, a response containing data
   intended for one client may be cached and subsequently sent by the proxy
   to other clients. If the proxy also caches 'Set-Cookie' headers, it may
   send one client's 'session' cookie to other clients. The severity depends
   on the application's use of the session and the proxy's behavior regarding
   cookies. The risk depends on all these conditions being met:1. The
   application must be hosted behind a caching proxy that does not strip
   cookies or ignore responses with cookies.2. The application sets
   'session.permanent = True'3. The application does not access or modify the
   session at any point during a request.4. 'SESSION_REFRESH_EACH_REQUEST'
   enabled (the default).5. The application does not set a 'Cache-Control'
   header to indicate that a page is private or should not be cached.This
   happens because vulnerable versions of Flask only set the 'Vary: Cookie'
   header when the session is accessed or modified, not when it is refreshed
   (re-sent to update the expiration) without being accessed or
   modified.https://github.com/pallets/flask/security/advisories/GHSA-m2qf-
   hxjv-5gpq
[1m   Fixed versions: [0m2.2.5, 2.3.2
[1m   CVE-2023-30861 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/55261/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 55261 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in flask version 0.12.1[0m
[1m   Vulnerability ID: [0m36388
[1m   Affected spec: [0m<0.12.3
[1m   ADVISORY: [0mflask version Before 0.12.3 contains a CWE-20: Improper
   Input Validation vulnerability in flask that can result in Large amount of
   memory usage possibly leading to denial of service. This attack appear to
   be exploitable via Attacker provides JSON data in incorrect encoding. This
   vulnerability appears to have been fixed in 0.12.3.
[1m   Fixed versions: [0m0.12.3
[1m   CVE-2018-1000656 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/36388/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 36388 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


[31m-> Vulnerability found in flask version 0.12.1[0m
[1m   Vulnerability ID: [0m38654
[1m   Affected spec: [0m<0.12.3
[1m   ADVISORY: [0mFlask 0.12.3 includes a fix for CVE-2019-1010083:
   Unexpected memory usage. The impact is denial of service. The attack
   vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-10006
   56.https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f72
   1cfc79ac2a691f6e3929
[1m   Fixed versions: [0m0.12.3
[1m   CVE-2019-1010083 is [0m[31m[1mHIGH SEVERITY => [0mCVSS v3, BASE
   SCORE 7.5, IMPACT SCORE 3.6, VECTOR STRING
   CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
   CVSS v2, BASE SCORE 5.0, IMPACT SCORE 2.9, VECTOR STRING
   AV:N/AC:L/Au:N/C:N/I:N/A:P
[1m   For more information about this vulnerability, visit
   [0mhttps://data.safetycli.com/v/38654/eda[0m
   To ignore this vulnerability, use PyUp vulnerability id 38654 in safetyâ€™s
   ignore command-line argument or add the ignore to your safety policy file.


+==============================================================================+
   [32m[1mREMEDIATIONS[0m

[31m[1m-> pillow version 5.0.0 was found, which has 42 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m10.3.0[0m
                                                                              
   [32m[1mWe recommend updating to version 10.3.0 of pillow. Other versions
   without known vulnerabilities are: 11.2.1, 11.1.0, 11.0.0, 10.4.0[0m
                                                                              
   For more information about the pillow package and update options, visit
   https://data.safetycli.com/p/pypi/pillow/eda/?from=5.0.0&to=10.3.0
   Always check for breaking changes when updating packages.
                                                                              
[31m[1m-> urllib3 version 1.24.1 was found, which has 8 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m1.26.19[0m
                                                                              
   [32m[1mWe recommend updating to version 1.26.19 of urllib3. Other
   versions without known vulnerabilities are: 2.4.0, 2.3.0, 2.2.3, 2.2.2,
   1.26.20[0m
                                                                              
   For more information about the urllib3 package and update options, visit
   https://data.safetycli.com/p/pypi/urllib3/eda/?from=1.24.1&to=1.26.19
   Always check for breaking changes when updating packages.
                                                                              
[31m[1m-> requests version 2.20.0 was found, which has 2 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m2.32.2[0m
                                                                              
   [32m[1mWe recommend updating to version 2.32.2 of requests. Other version
   without known vulnerabilities is 2.32.3[0m
                                                                              
   For more information about the requests package and update options, visit
   https://data.safetycli.com/p/pypi/requests/eda/?from=2.20.0&to=2.32.2
   Always check for breaking changes when updating packages.
                                                                              
[31m[1m-> pyyaml version 5.1 was found, which has 3 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m5.4[0m
                                                                              
   [32m[1mWe recommend updating to version 5.4 of pyyaml. Other versions
   without known vulnerabilities are: 6.0.2, 6.0.2rc1, 6.0.1, 6.0, 6.0b1,
   5.4.1[0m
                                                                              
   For more information about the pyyaml package and update options, visit
   https://data.safetycli.com/p/pypi/pyyaml/eda/?from=5.1&to=5.4
   Always check for breaking changes when updating packages.
                                                                              
[31m[1m-> django version 1.11.3 was found, which has 55 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m4.2.21[0m
                                                                              
   [32m[1mWe recommend updating to version 4.2.21 of django. Other versions
   without known vulnerabilities are: 5.2.1, 5.2rc1, 5.2b1, 5.2a1, 5.1.9,
   5.0.14[0m
                                                                              
   For more information about the django package and update options, visit
   https://data.safetycli.com/p/pypi/django/eda/?from=1.11.3&to=4.2.21
   Always check for breaking changes when updating packages.
                                                                              
[31m[1m-> flask version 0.12.1 was found, which has 3 vulnerabilities[0m
   The closest version with no known vulnerabilities is [1m2.2.5[0m
                                                                              
   [32m[1mWe recommend updating to version 2.2.5 of flask. Other versions
   without known vulnerabilities are: 3.1.1, 3.1.0, 3.0.3, 3.0.2, 3.0.1,
   3.0.0, 2.3.3, 2.3.2[0m
                                                                              
   For more information about the flask package and update options, visit
   https://data.safetycli.com/p/pypi/flask/eda/?from=0.12.1&to=2.2.5
   Always check for breaking changes when updating packages.
                                                                              
+==============================================================================+

 Scan was completed. 113 vulnerabilities were reported. 6 remediations were 
 recommended. 

+==============================================================================+[0m


[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m


